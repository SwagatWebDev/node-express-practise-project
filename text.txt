private EventLogProjection pickRecordWithMinOrMaxValueAndMaxEventDate(
        List<EventLogProjection> eventsWithSameNamePathAndDay,
        Function<EventLogProjection, String> valueExtractor,
        BiPredicate<EventLogProjection, EventLogProjection> valueMatcher) {

    return eventsWithSameNamePathAndDay.stream()
            .min(Comparator.comparing(
                    valueExtractor,
                    Comparator.nullsLast(Comparator.naturalOrder()))
                    .thenComparing(
                            EventLogProjection::getEventCreatedDate,
                            Comparator.nullsLast(Comparator.naturalOrder())))
            .map(minValueEvent ->
                    eventsWithSameNamePathAndDay.stream()
                            .filter(event -> valueMatcher.test(event, minValueEvent))
                            .max(Comparator.comparing(
                                    EventLogProjection::getEventCreatedDate,
                                    Comparator.nullsLast(Comparator.naturalOrder())))
                            .orElseThrow()
            )
            .orElseThrow(); // Handle as per your logic
}

// Example usage for minOldValue and maxNewValue
EventLogProjection minOldValueAndMaxNewValueEvent = pickRecordWithMinOrMaxValueAndMaxEventDate(
        eventsWithSameNamePathAndDay,
        EventLogProjection::getOldValue,
        (event, minValueEvent) -> Objects.equals(event.getOldValue(), minValueEvent.getOldValue())
);

// Example usage for minNewValue and maxNewValue
EventLogProjection minNewValueAndMaxNewValueEvent = pickRecordWithMinOrMaxValueAndMaxEventDate(
        eventsWithSameNamePathAndDay,
        EventLogProjection::getNewValue,
        (event, minValueEvent) -> Objects.equals(event.getNewValue(), minValueEvent.getNewValue())
);
