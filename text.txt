private EventLogProjection pickRecordWithMinOldValueAndMaxNewValue(List<EventLogProjection> eventsWithSameNamePathAndDay) {
    return eventsWithSameNamePathAndDay.stream()
            .min(Comparator.comparing(EventLogProjection::getEventCreatedDate, Comparator.nullsLast(Comparator.naturalOrder())))
            .flatMap(minOldValueEvent ->
                    eventsWithSameNamePathAndDay.stream()
                            .filter(event -> Objects.equals(event.getOldValue(), minOldValueEvent.getOldValue()))
                            .max(Comparator.comparing(EventLogProjection::getEventCreatedDate, Comparator.nullsLast(Comparator.naturalOrder())))
                            .map(maxNewValueEvent ->
                                    eventsWithSameNamePathAndDay.stream()
                                            .filter(event -> Objects.equals(event.getNewValue(), maxNewValueEvent.getNewValue()))
                                            .max(Comparator.comparing(EventLogProjection::getEventCreatedDate, Comparator.nullsLast(Comparator.naturalOrder())))
                                            .orElseThrow()
                            )
            )
            .orElseThrow(); // Handle as per your logic
}
