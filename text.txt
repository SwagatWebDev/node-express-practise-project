private EventLogProjection pickRecordWithMinOldValueAndMaxNewValue(List<EventLogProjection> eventsWithSameNamePathAndDay) {
    EventLogProjection minOldValueEvent = eventsWithSameNamePathAndDay.stream()
            .min(Comparator.comparing(
                    EventLogProjection::getOldValue,
                    Comparator.nullsLast(Comparator.naturalOrder()))
                    .thenComparing(
                            EventLogProjection::getEventCreatedDate,
                            Comparator.nullsLast(Comparator.naturalOrder())))
            .orElseThrow(); // Handle as per your logic

    EventLogProjection maxNewValueEvent = eventsWithSameNamePathAndDay.stream()
            .filter(event -> Objects.equals(event.getOldValue(), minOldValueEvent.getOldValue()))
            .max(Comparator.comparing(
                    EventLogProjection::getEventCreatedDate,
                    Comparator.nullsLast(Comparator.naturalOrder())))
            .orElseThrow(); // Handle as per your logic

    return new EventLogProjectionImpl(minOldValueEvent.getOldValue(), maxNewValueEvent.getNewValue());
}
