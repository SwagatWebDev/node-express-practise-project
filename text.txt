Map<String, EventLogProjection> latestRecords = new LinkedHashMap<>();

    for (EventLogProjection event : eventLogData) {
        // Check if the path is one of the specified special paths
        if (isSpecialPath(event.getPath())) {
            String key = event.getName();
            latestRecords.compute(key, (k, existingEvent) -> {
                // Compare and select the latest record based on the event created date
                if (existingEvent == null || existingEvent.getEventCreatedDate().isBefore(event.getEventCreatedDate())) {
                    return event;
                }
                return existingEvent;
            });
        }
    }

    // Convert the latest records to EventLogDto
    List<EventLogDto> eventLogDtoList = Stream.concat(
            latestRecords.values().stream(),
            eventLogData.filter(event -> !isSpecialPath(event.getPath()))
                    .map(this::mapToEventLogDto)
        )
        .sorted(Comparator.comparing(EventLogProjection::getEventCreatedDate).reversed())
        .collect(Collectors.toList());
