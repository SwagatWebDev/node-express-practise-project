@Override
public Page<EventLogDto> getEventLog(Pageable pageable) {
    Page<EventLogProjection> eventLogData = eventLogRepository.getEventLogData(pageable);

    Map<String, EventLogProjection> latestRecords = new LinkedHashMap<>();

    for (EventLogProjection event : eventLogData) {
        String key = event.getName() + "_" + event.getPath();

        // Check if the path is one of the specified special paths
        if (isSpecialPath(event.getPath())) {
            latestRecords.compute(key, (k, existingEvent) -> {
                if (existingEvent == null || existingEvent.getEventCreatedDate().compareTo(event.getEventCreatedDate()) < 0) {
                    return event;
                }
                return existingEvent;
            });
        } else {
            // For other paths, consider each record individually
            latestRecords.put(key, event);
        }
    }

    List<EventLogDto> eventLogDtoList = latestRecords.values().stream()
            .map(this::mapToEventLogDto)
            .collect(Collectors.toList());

    return new PageImpl<>(eventLogDtoList, pageable, eventLogData.getTotalElements());
}
