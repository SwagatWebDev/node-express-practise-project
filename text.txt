private EventLogProjection pickRecordWithMinOldValueAndMaxNewValue(List<EventLogProjection> eventsWithSameNamePathAndDay) {
    return eventsWithSameNamePathAndDay.stream()
        .min(Comparator.comparing(
                EventLogProjection::getEventCreatedDate,
                Comparator.nullsLast(Comparator.naturalOrder())))
        .map(minDateEvent ->
            eventsWithSameNamePathAndDay.stream()
                .filter(event -> Objects.equals(event.getEventCreatedDate(), minDateEvent.getEventCreatedDate()))
                .min(Comparator.comparing(
                        EventLogProjection::getOldValue,
                        Comparator.nullsLast(Comparator.naturalOrder())))
                .orElseThrow())
        .map(minOldValueEvent ->
            eventsWithSameNamePathAndDay.stream()
                .filter(event -> Objects.equals(event.getOldValue(), minOldValueEvent.getOldValue()))
                .max(Comparator.comparing(
                        EventLogProjection::getEventCreatedDate,
                        Comparator.nullsLast(Comparator.naturalOrder())))
                .orElseThrow())
        .map(maxNewValueEvent ->
            eventsWithSameNamePathAndDay.stream()
                .filter(event -> Objects.equals(event.getNewValue(), maxNewValueEvent.getNewValue()))
                .max(Comparator.comparing(
                        EventLogProjection::getEventCreatedDate,
                        Comparator.nullsLast(Comparator.naturalOrder())))
                .orElse(maxNewValueEvent))
        .orElseThrow(); // Handle as per your logic
}
